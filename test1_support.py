#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 7.2
#  in conjunction with Tcl version 8.6
#    Feb 25, 2022 10:05:33 PM IST  platform: Windows NT
#    Feb 25, 2022 10:07:23 PM IST  platform: Windows NT
st=None
import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
from tkcalendar import Calendar #cal
import test1
from tksheet import Sheet
import MySQLdb
mydb=MySQLdb.connect(host="localhost",user="root",password="root",port=3306)
mycursor=mydb.cursor()
mycursor.execute("use `yarn register`")
x=None
class popup:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("384x182+620+356")
        top.minsize(120, 1)
        top.maxsize(1540, 845)
        top.resizable(1,  1)
        top.title("Error")
        top.configure(background="#ff0000")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.13, rely=0.165, height=101, width=284)
        self.Label1.configure(background="#000000")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font="-family {Segoe UI} -size 13 -weight bold")
        self.Label1.configure(foreground="#ffff00")
        self.Label1.configure(text='''Wrong Shade Number''')

def focus():
    print(str(root.focus_get()))
cal=None
def dty(a):
    global x
    global cal
    x.destroy()
    x=None
    del cal
    del x
    if st=="rcd":
        print("RCD")
        rcd.set(caldate.get())
    elif st=="inv":
        print("INV")
        inv.set(caldate.get())
class cald:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("325x400+468+138")
        top.minsize(120, 1)
        top.maxsize(3076, 845)
        top.resizable(1,  1)
        top.title("Select Date")
        top.configure(background="#404040")

        self.cal=Calendar(top,selectmode="day",textvariable=caldate)
        self.cal.place(relx=0.03, rely=0.03, height=300, width=300)
        self.top = top

        self.Button1 = tk.Button(self.top)
        self.Button1.place(relx=0.431, rely=0.825, height=34, width=67)
        self.Button1.configure(activebackground="#00c4c4")
        self.Button1.configure(activeforeground="#00ffff")
        self.Button1.configure(background="#00ffff")
        self.Button1.configure(compound="left")
        self.Button1.configure(command=lambda :[print("*",caldate.get()),dty(1)])
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''OK''')



def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def set_Tk_var():
    print("VAR")
    global msgv
    msgv = tk.StringVar()
    msgv.set('Message')

    global cd_num
    cd_num = tk.StringVar()
    global combobox1
    combobox1 = tk.StringVar()
    global combobox2
    combobox2 = tk.StringVar()
    global combobox3
    combobox3 = tk.StringVar()
    global combobox4
    combobox4 = tk.StringVar()
    global combobox5
    combobox5 = tk.StringVar()
    global caldate
    caldate = tk.StringVar()
    global rcd
    rcd = tk.StringVar()
    global inv
    inv = tk.StringVar()
    global inv_num
    inv_num = tk.StringVar()
    global gr_num
    gr_num = tk.StringVar()
    global y_s
    y_s = tk.StringVar()
    global n_w
    n_w = tk.StringVar()
    global inv_pr
    inv_pr = tk.StringVar()
    #caldate.trace('w',getdate())
def main(*args):
    '''Main entry point for the application.'''
    global root
    root = tk.Tk()
    root.protocol( 'WM_DELETE_WINDOW' , root.destroy)
    # Creates a toplevel widget.
    global _top44, _w44
    _top44 = root
    _w44 = test1.Toplevel1(_top44)
    root.mainloop()

class sheet(Sheet):
    def __init__(self, parent, **kw):
        Sheet.__init__(
            self,
            parent,
            theme="dark blue",
            horizontal_grid_to_end_of_window = True,
            vertical_grid_to_end_of_window = True,
            data =[]
            )
Custom=sheet

def calend(*args):
        global st
        global cal
        global x
        cal=None
        print('test1_support.calend')
        if (str((root.focus_get()))[2:])=="entry":
            st="rcd"
            print("FR")
        elif (str((root.focus_get()))[2:])=="entry3":
            st="inv"
            print("FI")
        x=tk.Tk()
        cal=cald(x)
        x.mainloop()
        cal=None

def cd(a):
    print('test1_support.cd')
    global L4
    print(combobox4.get())
    mycursor.execute("select card_num,shade_num from yarn_cardnum_shdnum_tbl")
    Lt=tuple([i[1] for i in mycursor.fetchall()])
    try:
        mycursor.execute("select card_num,shade_num from yarn_cardnum_shdnum_tbl")
        Lr=tuple([i[0] for i in mycursor.fetchall()])
        i=Lt.index(eval(combobox4.get()))
        cd_num.set(int(Lr[i]))
    except:
        print("galat shade number dala hn bhai")
        x=tk.Tk()
        pop=popup(x)
    sys.stdout.flush()

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

def rfsh():
    print('test1_support.rfsh')
    destroy_window()
    import test1
    test1.vp_start_gui()
    sys.stdout.flush()
data=[]
def tbl(*args):
    global data
    data.append([cd_num.get(),combobox1.get(),combobox2.get(),combobox3.get(),combobox4.get(),combobox5.get(),caldate.get(),rcd.get(),inv.get(),inv_num.get(),gr_num.get(),y_s.get(),n_w.get(),inv_pr.get()])
    print('test1_support.tbl')
    w.cust1.set_sheet_data(data)
    sys.stdout.flush()

if __name__ == '__main__':
    import test1
    test1.vp_start_gui()





